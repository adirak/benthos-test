input:
  nsq:
    nsqd_tcp_addresses: ["nsqd:4150"]
    lookupd_http_addresses: ["nsqlookupd:4161"]
    topic: "default_logs"
    user_agent: "default_log_consumer"
    channel: "default_log_channel"

pipeline:
  processors:
    - unarchive:
        format: "json_array"
    - parallel:
        cap: 10
        processors:
            
          - mapping: |
              root = this
              let stream_name = if this.env != null { this.env + "-" + this.stream_name.trim_prefix("/") } else { this.stream_name.trim_prefix("/").or("default") }

              root.source_log = this.log
              root.log = if this.log != null {this.log.parse_json().catch(deleted())}
              
              meta = { "org": this.org,"stream_name": $stream_name }    

          - mapping: |
              root = {}
              root.source_log = source_log
              root.container_id = this.container_id
              root.source = this.log.source
              root."@built_date" = this.log."@built_date"
              root.level = this.log.level
              root.msg = this.log.msg
              root.time = this.log.time
              root.stream = this.log.stream
              root.log = deleted()
              root.log_type = this.log_type
              

          - switch:

              - check: this.time != null
                processors:
                  - mapping: |
                      root = this
                      root.timestamp = this.time.ts_unix_micro().or("")

              - check: this.timestamp != null
                processors:
                  - mapping: |
                      root = this
                      let ts_converted = this.timestamp / 1000000  # timezone +7 bangkok
                      root.ts_converted = $ts_converted.ts_format("2006-Jan-02 15:04:05.999", "Asia/Bangkok")

              - check: this.log_type == "file"
                processors:
                  - mapping: |
                      root = this
                      let dirName = this.filename.split("/").index(-2)
                      let stream_name = if this.env != null { this.env + "-" + $dirName } else { $dirName }
                      meta = { "org": this.org,"stream_name": $stream_name }

              - check: this.log_type == "json"
                processors:
                  - mapping: |
                      root = this.source_log
                      root.timestamp = timestamp_unix_micro()

              

output:
  switch:
    cases:
      - check: meta("org") != null
        output:
          http_client:
            url: http://openobserve:5080/api/${! meta("org") }/${! meta("stream_name") }/_json
            verb: POST
            basic_auth:
              enabled: true
              username: techberry@hyper-insight.co.th
              password: vUV9Es32nY96Iw58

      - check: meta("org") == null
        output:
          http_client:
            url: http://openobserve:5080/api/default/default/_json
            verb: POST
            basic_auth:
              enabled: true
              username: techberry@hyper-insight.co.th
              password: vUV9Es32nY96Iw58
